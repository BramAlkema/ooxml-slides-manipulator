const { test, expect } = require('@playwright/test');

/**
 * Playwright tests for validating OOXML-generated slides in Google Slides and PowerPoint Online
 */

test.describe('OOXML Slides Validation', () => {
  
  test.beforeEach(async ({ page }) => {
    // Set longer timeout for slide operations
    test.setTimeout(120000);
  });

  test('Google Slides - Basic slide rendering', async ({ page }) => {
    // Navigate to Google Slides
    await page.goto('https://docs.google.com/presentation/u/0/');
    
    // Wait for the page to load
    await page.waitForSelector('[data-tooltip="Blank presentation"]', { timeout: 30000 });
    
    // Create a new blank presentation
    await page.click('[data-tooltip="Blank presentation"]');
    
    // Wait for the presentation to load
    await page.waitForSelector('.punch-viewer-content', { timeout: 30000 });
    
    // Verify basic slide structure is present
    await expect(page.locator('.punch-viewer-content')).toBeVisible();
    await expect(page.locator('.punch-filmstrip')).toBeVisible();
    
    // Take screenshot for validation
    await page.screenshot({ path: 'tests/screenshots/google-slides-basic.png' });
  });

  test('Google Slides - Custom theme validation', async ({ page }) => {
    // Test will upload and validate a custom theme generated by our OOXML system
    await page.goto('https://docs.google.com/presentation/u/0/');
    
    // Create new presentation
    await page.waitForSelector('[data-tooltip="Blank presentation"]', { timeout: 30000 });
    await page.click('[data-tooltip="Blank presentation"]');
    await page.waitForSelector('.punch-viewer-content', { timeout: 30000 });
    
    // Access theme options
    await page.click('[aria-label="Theme"]');
    await page.waitForSelector('.docs-material-theme-picker', { timeout: 10000 });
    
    // Verify theme picker is functional
    await expect(page.locator('.docs-material-theme-picker')).toBeVisible();
    
    // Take screenshot of theme picker
    await page.screenshot({ path: 'tests/screenshots/google-slides-theme-picker.png' });
  });

  test('PowerPoint Online - Basic functionality', async ({ page }) => {
    // Navigate to PowerPoint Online
    await page.goto('https://www.office.com/launch/powerpoint');
    
    // Wait for sign-in or main page
    await page.waitForLoadState('networkidle', { timeout: 30000 });
    
    // Look for new presentation button or sign-in
    const newPresentationSelector = '[data-automation-id="NewBlankPresentation"], .ms-Button--primary, [aria-label*="New"], [aria-label*="Create"]';
    
    try {
      await page.waitForSelector(newPresentationSelector, { timeout: 15000 });
      await page.click(newPresentationSelector);
      
      // Wait for presentation interface
      await page.waitForSelector('[role="main"], .slide-container, #SlideContainer', { timeout: 30000 });
      
      // Verify PowerPoint interface elements
      const slideContainer = page.locator('[role="main"], .slide-container, #SlideContainer').first();
      await expect(slideContainer).toBeVisible();
      
      // Take screenshot
      await page.screenshot({ path: 'tests/screenshots/powerpoint-online-basic.png' });
      
    } catch (error) {
      // If we hit sign-in, document it
      await page.screenshot({ path: 'tests/screenshots/powerpoint-online-signin.png' });
      console.log('PowerPoint Online requires authentication - test documented sign-in page');
    }
  });

  test('PPTX file validation - Download and verify', async ({ page }) => {
    // This test would validate that PPTX files generated by our system
    // can be properly downloaded and opened
    
    await page.goto('https://docs.google.com/presentation/u/0/');
    await page.waitForSelector('[data-tooltip="Blank presentation"]', { timeout: 30000 });
    await page.click('[data-tooltip="Blank presentation"]');
    await page.waitForSelector('.punch-viewer-content', { timeout: 30000 });
    
    // Access File menu
    await page.click('[aria-label="File"]');
    await page.waitForSelector('[role="menu"]', { timeout: 5000 });
    
    // Look for download options
    const downloadOption = page.locator('[aria-label*="Download"], [data-tooltip*="Download"]').first();
    
    if (await downloadOption.isVisible()) {
      await downloadOption.click();
      
      // Look for PPTX download option
      const pptxOption = page.locator('text="Microsoft PowerPoint (.pptx)"');
      if (await pptxOption.isVisible()) {
        await expect(pptxOption).toBeVisible();
        console.log('PPTX download option available');
      }
    }
    
    await page.screenshot({ path: 'tests/screenshots/download-options.png' });
  });

  test('Typography and formatting validation', async ({ page }) => {
    // Test typography and formatting features
    await page.goto('https://docs.google.com/presentation/u/0/');
    await page.waitForSelector('[data-tooltip="Blank presentation"]', { timeout: 30000 });
    await page.click('[data-tooltip="Blank presentation"]');
    await page.waitForSelector('.punch-viewer-content', { timeout: 30000 });
    
    // Click on title placeholder
    await page.click('.punch-viewer-content [data-automation-id="title"], .kix-wordhtmlgenerator-word-node, [role="textbox"]');
    
    // Type test content
    await page.type('.punch-viewer-content [data-automation-id="title"], .kix-wordhtmlgenerator-word-node, [role="textbox"]', 'Typography Test');
    
    // Access text formatting options
    await page.click('[aria-label="Text"]');
    await page.waitForSelector('[role="menu"]', { timeout: 5000 });
    
    // Verify formatting options are available
    await expect(page.locator('[role="menu"]')).toBeVisible();
    
    await page.screenshot({ path: 'tests/screenshots/typography-formatting.png' });
  });

  test('Color and theme customization', async ({ page }) => {
    // Test color and theme customization features
    await page.goto('https://docs.google.com/presentation/u/0/');
    await page.waitForSelector('[data-tooltip="Blank presentation"]', { timeout: 30000 });
    await page.click('[data-tooltip="Blank presentation"]');
    await page.waitForSelector('.punch-viewer-content', { timeout: 30000 });
    
    // Access slide menu
    await page.click('[aria-label="Slide"]');
    await page.waitForSelector('[role="menu"]', { timeout: 5000 });
    
    // Look for theme or background options
    const themeOptions = page.locator('text="Change theme", text="Change background", [aria-label*="theme"], [aria-label*="background"]');
    
    if (await themeOptions.first().isVisible()) {
      await themeOptions.first().click();
      await page.waitForTimeout(2000);
      
      // Take screenshot of theme customization
      await page.screenshot({ path: 'tests/screenshots/theme-customization.png' });
    }
  });

});